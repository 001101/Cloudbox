---
- block:
  - name: "Check {{backup.tgz_dest}} exists"
    stat:
      path: "{{backup.tgz_dest}}"
    register: backup_location

  - name: "Create backup location {{backup.tgz_dest}}"
    file: path={{backup.tgz_dest}} state=directory mode=0775 owner={{user}} group={{user}} recurse=true
    when: backup_location.stat.exists == False

  - name: "Check {{backup.tgz_dest}}/cloudbox.tgz exists"
    stat:
      path: "{{backup.tgz_dest}}/cloudbox.tgz"
    register: backup_previous_tgz

  - name: "Copying cloudbox.tgz to cloudbox.tgz.backup"
    copy:
      src: "{{backup.tgz_dest}}/cloudbox.tgz"
      dest: "{{backup.tgz_dest}}/cloudbox.tgz.backup"
      force: yes
      group: "{{user}}"
      owner: "{{user}}"
    when: backup_previous_tgz.stat.exists

  - name: "Remove previous cloudbox.tgz"
    file:
      path: "{{backup.tgz_dest}}/cloudbox.tgz"
      state: absent
    when: backup_previous_tgz.stat.exists

  - name: "Stop Plex"
    docker_container:
      name: plex
      image: plexinc/pms-docker
      state: stopped
    when: backup.stop_plex|bool

  - name: "Archiving /opt to {{backup.tgz_dest}}/cloudbox.tgz"
    archive:
      path: /opt
      dest: "{{backup.tgz_dest}}/cloudbox.tgz"
      owner: "{{user}}"
      group: "{{user}}"

  - name: "Start Plex"
    docker_container:
      name: plex
      image: plexinc/pms-docker
      state: started
    when: backup.stop_plex|bool

  - name: test fail
    shell: fail

  - debug:
      msg: "Current playbook path: {{playbook_dir}}/cloudbox.yml"
  
  always:
  - debug:
      msg: "Finished backup"