---
- block:
  - name: "Check {{backup.tgz_dest}} exists"
    tags:
      - backup
    stat:
      path: "{{backup.tgz_dest}}"
    register: backup_location

  - name: "Create backup location {{backup.tgz_dest}}"
    tags:
      - backup
    file: path={{backup.tgz_dest}} state=directory mode=0775 owner={{user}} group={{user}} recurse=true
    when: backup_location.stat.exists == False

  - name: "Check if backup.lock is present"
    tags:
      - backup
    stat:
      path: "{{playbook_dir}}/backup.lock"
    register: backup_lock

  - name: "Fail when backup.lock exists"
    tags:
      - backup
    fail:
      msg: "Backup is already in progress..."
    when: backup_lock.stat.exists

  - name: "Create backup.lock"
    tags:
      - backup
    file:
      path: "{{playbook_dir}}/backup.lock"
      state: touch
      owner: "{{user}}"
      group: "{{user}}"
    when: backup_lock.stat.exists == False

  - name: "Check {{backup.tgz_dest}}/cloudbox.tgz exists"
    tags:
      - backup
    stat:
      path: "{{backup.tgz_dest}}/cloudbox.tgz"
    register: backup_previous_tgz

  - name: "Copying cloudbox.tgz to cloudbox.tgz.backup"
    tags:
      - backup
    copy:
      src: "{{backup.tgz_dest}}/cloudbox.tgz"
      dest: "{{backup.tgz_dest}}/cloudbox.tgz.backup"
      force: yes
      group: "{{user}}"
      owner: "{{user}}"
    when: backup_previous_tgz.stat.exists

  - name: "Remove previous cloudbox.tgz"
    tags:
      - backup
    file:
      path: "{{backup.tgz_dest}}/cloudbox.tgz"
      state: absent
    when: backup_previous_tgz.stat.exists

  - name: "Stop Plex"
    tags:
      - backup
    docker_container:
      name: plex
      image: plexinc/pms-docker
      state: stopped
    when: backup.stop_plex|bool

  - name: "Archiving /opt to {{backup.tgz_dest}}/cloudbox.tgz"
    tags:
      - backup
    archive:
      path: /opt
      dest: "{{backup.tgz_dest}}/cloudbox.tgz"
      owner: "{{user}}"
      group: "{{user}}"

  - name: "Start Plex"
    tags:
      - backup
    docker_container:
      name: plex
      image: plexinc/pms-docker
      state: started
    when: backup.stop_plex|bool
  
  - name: "Upload backups with rclone to {{backup.rclone_dest}}"
    tags:
      - backup
    command: "rclone copy '{{backup.tgz_dest}}' '{{backup.rclone_dest}}' --stats=30s -v --transfers=2 --log-file='{{playbook_dir}}/backup_rclone.log'"
    when: backup.use_rclone|bool

  - name: "Upload backups with rsync to {{backup.rsync_dest}}"
    tags:
      - backup
    synchronize:
      src: "{{backup.tgz_dest}}"
      dest: "{{backup.rsync_dest}}"
      rsync_opts:
        - "--log-file='{{playbook_dir}}/backup_rsync.log'"
    when: backup.use_rsync|bool

  always:
  - debug:
      tags:
      - backup
      msg: "Finished backup"
    when: backup_lock.stat.exists == False

  - name: "Remove backup.lock"
    tags:
      - backup
    file:
      path: "{{playbook_dir}}/backup.lock"
      state: absent
    when: backup_lock.stat.exists == False