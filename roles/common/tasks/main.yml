---
  - name: Create common groups
    group: "name={{item}} state=present"
    with_items:
      - docker
      - "{{user}}"

  - name: "Create user {{user}}"
    user:
      name: "{{user}}"
      group: "{{user}}"
      groups: "{{user}},docker,sudo"
      password: $6$zB04ETFuezaIT$CnhuAgxVir31qsE3.hLjv.WjMWNLFsrAtuK5mjHUx7gMnzGv7awJq8ZhEK8F/8UBNOjyoauaQ3Wle.GoYC2i1.
      update_password: on_create
      append: yes
      shell: /bin/bash

  - name: "Get {{user}} uid"
    shell: "id -u {{user}}"
    register: uid

  - name: "Get {{user}} gid"
    shell: "id -g {{user}}"
    register: gid
      
  - name: Install common packages
    apt: "name={{item}} state=installed"
    with_items:
      - unrar
      - unzip
      - p7zip
      - python-pip
      - python3-pip
      - curl
      - sqlite3
      - vnstat
      - tree
      - lsof
      - man-db
      - ksmtuned
      - git
      - pwgen
      - rsync
      - logrotate
      
  - name: Install common pip modules
    pip: "name={{item}} state=latest"
    with_items:
      - docker-py
      - speedtest-cli

  - name: Create common directories
    file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=true"
    with_items:
      - /mnt/unionfs
      - /mnt/local
      - /mnt/local/.unionfs-fuse
      - /mnt/local/Media/TV
      - /mnt/local/Media/Movies
      - /opt
      - /opt/plexdrive
      - /opt/sonarr
      - /opt/radarr
      - /opt/nzbget
      - /opt/rutorrent
      - /opt/jackett
      - /opt/nzbhydra
      - /opt/plex
      - /opt/plexpy
      - /opt/plex_autoscan
      - /opt/unionfs_cleaner
      - /opt/rclone
      - "/home/{{user}}/.config/rclone"
      - "{{nzbget.downloads}}"
      - "{{rutorrent.downloads}}"
      - "{{plex.transcodes}}"
      
  - name: Check plexdrive mount folder exist
    stat:
      path: /mnt/plexdrive
    register: plexdrive_mnt

  - name: Create /mnt/plexdrive
    file:
      path: /mnt/plexdrive
      state: directory
      mode: 0755
      owner: "{{user}}"
      group: "{{user}}"
      recurse: true
    when: plexdrive_mnt.stat.exists == False