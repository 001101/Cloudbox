---
- name: Stop and remove any existing container
  docker_container:
    name: nginx-proxy
    state: absent

- name: Stop and remove any existing letsencrypt container
  docker_container:
    name: letsencrypt
    state: absent

- name: Create and start container
  docker_container:
    name: nginx-proxy
    image: "jwilder/nginx-proxy"
    published_ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/nginx-proxy:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/nginx/vhost.d:/etc/nginx/vhost.d"
      - "/var/nginx/html:/usr/share/nginx/html"
    env:
      DEFAULT_HOST: "{{domain}}"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 
    networks:
      - name: cloudbox
        ipv4_address: 172.18.0.6
        aliases:
          - nginx-proxy
    restart_policy: always
    state: started

- name: Create and start letsencrypt container
  docker_container:
    name: letsencrypt
    image: "jrcs/letsencrypt-nginx-proxy-companion"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/nginx-proxy:/etc/nginx/certs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/nginx/vhost.d:/etc/nginx/vhost.d"
      - "/var/nginx/html:/usr/share/nginx/html"
    env:
      DEBUG: true
    networks:
      - name: cloudbox
        ipv4_address: 172.18.0.19
        aliases:
          - letsencrypt
    restart_policy: always
    state: started